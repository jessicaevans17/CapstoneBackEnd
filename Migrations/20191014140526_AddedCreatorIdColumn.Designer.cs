// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using capstonebackend;

namespace capstonebackend.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20191014140526_AddedCreatorIdColumn")]
    partial class AddedCreatorIdColumn
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("CapstoneBackEnd.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<int>("GameId");

                    b.Property<string>("LastName");

                    b.Property<string>("Name");

                    b.Property<string>("ProfileURL");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("capstonebackend.Models.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("City");

                    b.Property<string>("Creator");

                    b.Property<string>("CreatorId");

                    b.Property<string>("CreatorProfilePic");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateOfPlay");

                    b.Property<string>("Description");

                    b.Property<string>("GameTitle");

                    b.Property<string>("LocationName");

                    b.Property<int>("MaxPlayers");

                    b.Property<int>("MinPlayers");

                    b.Property<string>("State");

                    b.Property<int>("ZipCode");

                    b.Property<string>("gameImageUrl");

                    b.Property<int>("maxPlayTime");

                    b.Property<int>("minPlayTime");

                    b.Property<bool>("privateResidence");

                    b.Property<string>("rulesUrl");

                    b.HasKey("Id");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("CapstoneBackEnd.Models.Player", b =>
                {
                    b.HasOne("capstonebackend.Models.Game", "Game")
                        .WithMany("Players")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
